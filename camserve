#!/usr/bin/env python3
"""CamServe

Serve camera images over network
"""

from tornado import ioloop, web
import cv2

from jinja2 import Environment, FileSystemLoader, select_autoescape
env = Environment(
    loader=FileSystemLoader('./'),
    autoescape=select_autoescape(['html', 'xml']))

template = env.get_template('template.html')

cam = None

class MainHandler(web.RequestHandler):

    def get(self):
        height = self.param('height', 480)
        width  = self.param('width', 640)
        self.set_header("Content-Type", "image/png")
        response = self.capture(height, width)
        self.write(response.tobytes())

    def param(self, param, default):
        val = self.get_argument(param, default)
        try:
            val = int(val)
        except ValueError:
            val = default
        return val

    def capture(self, height, width):
        cam.set(cv2.CAP_PROP_FRAME_HEIGHT, height)
        cam.set(cv2.CAP_PROP_FRAME_WIDTH, width)
        print('{}x{}'.format(width, height))
        sucs, frame = cam.read()
        _, buf = cv2.imencode('.png', frame)
        return buf

def make_app():
    global cam
    cam = cv2.VideoCapture(0)
    return web.Application([
        (r"/.*", MainHandler),
    ])

if __name__ == "__main__":
    app = make_app()
    app.listen(8080)
    ioloop.IOLoop.current().start()

